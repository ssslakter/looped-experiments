# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/looped-experiments',
                'doc_host': 'https://ssslakter.github.io',
                'git_url': 'https://github.com/ssslakter/looped-experiments',
                'lib_path': 'looped_experiments'},
  'syms': { 'looped_experiments.all': {},
            'looped_experiments.main': {},
            'looped_experiments.models': { 'looped_experiments.models.LoopedTransformer': ( 'models.html#loopedtransformer',
                                                                                            'looped_experiments/models.py'),
                                           'looped_experiments.models.LoopedTransformer.__init__': ( 'models.html#loopedtransformer.__init__',
                                                                                                     'looped_experiments/models.py'),
                                           'looped_experiments.models.LoopedTransformer._model': ( 'models.html#loopedtransformer._model',
                                                                                                   'looped_experiments/models.py'),
                                           'looped_experiments.models.LoopedTransformer.forward': ( 'models.html#loopedtransformer.forward',
                                                                                                    'looped_experiments/models.py'),
                                           'looped_experiments.models.MaskedTransformer': ( 'models.html#maskedtransformer',
                                                                                            'looped_experiments/models.py'),
                                           'looped_experiments.models.MaskedTransformer.__init__': ( 'models.html#maskedtransformer.__init__',
                                                                                                     'looped_experiments/models.py'),
                                           'looped_experiments.models.MaskedTransformer.forward': ( 'models.html#maskedtransformer.forward',
                                                                                                    'looped_experiments/models.py'),
                                           'looped_experiments.models.Transformer': ( 'models.html#transformer',
                                                                                      'looped_experiments/models.py'),
                                           'looped_experiments.models.Transformer.__init__': ( 'models.html#transformer.__init__',
                                                                                               'looped_experiments/models.py'),
                                           'looped_experiments.models.Transformer.create_prompt': ( 'models.html#transformer.create_prompt',
                                                                                                    'looped_experiments/models.py'),
                                           'looped_experiments.models.Transformer.forward': ( 'models.html#transformer.forward',
                                                                                              'looped_experiments/models.py'),
                                           'looped_experiments.models.get_loss': ('models.html#get_loss', 'looped_experiments/models.py'),
                                           'looped_experiments.models.get_model': ('models.html#get_model', 'looped_experiments/models.py'),
                                           'looped_experiments.models.init_all_params': ( 'models.html#init_all_params',
                                                                                          'looped_experiments/models.py'),
                                           'looped_experiments.models.init_weights': ( 'models.html#init_weights',
                                                                                       'looped_experiments/models.py'),
                                           'looped_experiments.models.loop_loss': ( 'models.html#loop_loss',
                                                                                    'looped_experiments/models.py')},
            'looped_experiments.nano_gpt': {},
            'looped_experiments.tasks': { 'looped_experiments.tasks.DataGenerator': ( 'tasks.html#datagenerator',
                                                                                      'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.DataGenerator.__init__': ( 'tasks.html#datagenerator.__init__',
                                                                                               'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.DataGenerator.__iter__': ( 'tasks.html#datagenerator.__iter__',
                                                                                               'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.DataGenerator.__len__': ( 'tasks.html#datagenerator.__len__',
                                                                                              'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.DataGenerator.__next__': ( 'tasks.html#datagenerator.__next__',
                                                                                               'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.DataGenerator.task': ( 'tasks.html#datagenerator.task',
                                                                                           'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.LinearRegression': ( 'tasks.html#linearregression',
                                                                                         'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.LinearRegression.__call__': ( 'tasks.html#linearregression.__call__',
                                                                                                  'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.LinearRegression.__init__': ( 'tasks.html#linearregression.__init__',
                                                                                                  'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.LinearRegression._sparse_mask': ( 'tasks.html#linearregression._sparse_mask',
                                                                                                      'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.dataloader': ('tasks.html#dataloader', 'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.get_task_cls': ( 'tasks.html#get_task_cls',
                                                                                     'looped_experiments/tasks.py'),
                                          'looped_experiments.tasks.sample': ('tasks.html#sample', 'looped_experiments/tasks.py')},
            'looped_experiments.training': { 'looped_experiments.training.Callback': ( 'training.html#callback',
                                                                                       'looped_experiments/training.py'),
                                             'looped_experiments.training.Callback.__gt__': ( 'training.html#callback.__gt__',
                                                                                              'looped_experiments/training.py'),
                                             'looped_experiments.training.CurriculumCB': ( 'training.html#curriculumcb',
                                                                                           'looped_experiments/training.py'),
                                             'looped_experiments.training.CurriculumCB.__init__': ( 'training.html#curriculumcb.__init__',
                                                                                                    'looped_experiments/training.py'),
                                             'looped_experiments.training.CurriculumCB.after_batch': ( 'training.html#curriculumcb.after_batch',
                                                                                                       'looped_experiments/training.py'),
                                             'looped_experiments.training.CurriculumCB.get_params': ( 'training.html#curriculumcb.get_params',
                                                                                                      'looped_experiments/training.py'),
                                             'looped_experiments.training.CurriculumCB.update_task': ( 'training.html#curriculumcb.update_task',
                                                                                                       'looped_experiments/training.py'),
                                             'looped_experiments.training.FnCallback': ( 'training.html#fncallback',
                                                                                         'looped_experiments/training.py'),
                                             'looped_experiments.training.FnCallback.__call__': ( 'training.html#fncallback.__call__',
                                                                                                  'looped_experiments/training.py'),
                                             'looped_experiments.training.FnCallback.__init__': ( 'training.html#fncallback.__init__',
                                                                                                  'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner': ( 'training.html#learner',
                                                                                      'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner.__init__': ( 'training.html#learner.__init__',
                                                                                               'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner.callback': ( 'training.html#learner.callback',
                                                                                               'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner.eval': ( 'training.html#learner.eval',
                                                                                           'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner.fit': ( 'training.html#learner.fit',
                                                                                          'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner.one_batch': ( 'training.html#learner.one_batch',
                                                                                                'looped_experiments/training.py'),
                                             'looped_experiments.training.Learner.one_epoch': ( 'training.html#learner.one_epoch',
                                                                                                'looped_experiments/training.py'),
                                             'looped_experiments.training.LoopCB': ( 'training.html#loopcb',
                                                                                     'looped_experiments/training.py'),
                                             'looped_experiments.training.LoopCB.after_batch': ( 'training.html#loopcb.after_batch',
                                                                                                 'looped_experiments/training.py'),
                                             'looped_experiments.training.LoopCB.update_model': ( 'training.html#loopcb.update_model',
                                                                                                  'looped_experiments/training.py'),
                                             'looped_experiments.training.SaveModelCB': ( 'training.html#savemodelcb',
                                                                                          'looped_experiments/training.py'),
                                             'looped_experiments.training.SaveModelCB.__init__': ( 'training.html#savemodelcb.__init__',
                                                                                                   'looped_experiments/training.py'),
                                             'looped_experiments.training.SaveModelCB.after_batch': ( 'training.html#savemodelcb.after_batch',
                                                                                                      'looped_experiments/training.py'),
                                             'looped_experiments.training.SaveModelCB.after_fit': ( 'training.html#savemodelcb.after_fit',
                                                                                                    'looped_experiments/training.py'),
                                             'looped_experiments.training.ToDeviceCB': ( 'training.html#todevicecb',
                                                                                         'looped_experiments/training.py'),
                                             'looped_experiments.training.ToDeviceCB.__init__': ( 'training.html#todevicecb.__init__',
                                                                                                  'looped_experiments/training.py'),
                                             'looped_experiments.training.ToDeviceCB.before_batch': ( 'training.html#todevicecb.before_batch',
                                                                                                      'looped_experiments/training.py'),
                                             'looped_experiments.training.ToDeviceCB.before_fit': ( 'training.html#todevicecb.before_fit',
                                                                                                    'looped_experiments/training.py'),
                                             'looped_experiments.training.WandbCB': ( 'training.html#wandbcb',
                                                                                      'looped_experiments/training.py'),
                                             'looped_experiments.training.WandbCB.__init__': ( 'training.html#wandbcb.__init__',
                                                                                               'looped_experiments/training.py'),
                                             'looped_experiments.training.WandbCB.after_batch': ( 'training.html#wandbcb.after_batch',
                                                                                                  'looped_experiments/training.py'),
                                             'looped_experiments.training.WandbCB.after_fit': ( 'training.html#wandbcb.after_fit',
                                                                                                'looped_experiments/training.py'),
                                             'looped_experiments.training.WandbCB.before_fit': ( 'training.html#wandbcb.before_fit',
                                                                                                 'looped_experiments/training.py'),
                                             'looped_experiments.training.repr_cbs': ( 'training.html#repr_cbs',
                                                                                       'looped_experiments/training.py'),
                                             'looped_experiments.training.with_cbs': ( 'training.html#with_cbs',
                                                                                       'looped_experiments/training.py'),
                                             'looped_experiments.training.with_cbs.__call__': ( 'training.html#with_cbs.__call__',
                                                                                                'looped_experiments/training.py'),
                                             'looped_experiments.training.with_cbs.__init__': ( 'training.html#with_cbs.__init__',
                                                                                                'looped_experiments/training.py')},
            'looped_experiments.utils': {}}}
